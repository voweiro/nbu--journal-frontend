/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/utils/api */ \"./src/utils/api.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/types */ \"./src/types/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_api__WEBPACK_IMPORTED_MODULE_3__]);\n_utils_api__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nconst initialState = {\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    isLoading: false,\n    isResendLoading: false,\n    error: null\n};\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst AuthProvider = ({ children })=>{\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialState);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // Load user from localStorage on initial load\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadUser = async ()=>{\n            try {\n                // Check if running in browser environment\n                if (true) {\n                    setState({\n                        ...initialState,\n                        isLoading: false\n                    });\n                    return;\n                }\n                const token = localStorage.getItem(\"token\");\n                if (!token) {\n                    setState({\n                        ...initialState,\n                        isLoading: false\n                    });\n                    return;\n                }\n                // Get user profile\n                const { user } = await _utils_api__WEBPACK_IMPORTED_MODULE_3__.authAPI.getProfile();\n                setState({\n                    user,\n                    token,\n                    isAuthenticated: true,\n                    isLoading: false,\n                    isResendLoading: false,\n                    error: null\n                });\n            } catch (error) {\n                console.error(\"Auth load error:\", error);\n                localStorage.removeItem(\"token\");\n                setState({\n                    ...initialState,\n                    isLoading: false\n                });\n            }\n        };\n        loadUser();\n    }, []);\n    // Login user\n    const login = async (email, password)=>{\n        try {\n            setState({\n                ...state,\n                isLoading: true\n            });\n            const { token, user } = await _utils_api__WEBPACK_IMPORTED_MODULE_3__.authAPI.login(email, password);\n            // Save both token and user details to localStorage\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            setState({\n                user,\n                token,\n                isAuthenticated: true,\n                isLoading: false,\n                isResendLoading: false,\n                error: null\n            });\n            // Redirect based on user role\n            if (user.role === _types__WEBPACK_IMPORTED_MODULE_4__.UserRole.SUPER_ADMIN || user.role === _types__WEBPACK_IMPORTED_MODULE_4__.UserRole.ADMIN) {\n                router.push(\"/dashboard\");\n            } else if (user.role === _types__WEBPACK_IMPORTED_MODULE_4__.UserRole.REVIEWER) {\n                router.push(\"/reviews\");\n            } else {\n                router.push(\"/journals\");\n            }\n        } catch (error) {\n            console.error(\"Login error:\", error);\n            // Check if the error is related to email verification\n            if (error.response?.data?.requiresVerification) {\n                setState({\n                    ...state,\n                    isLoading: false,\n                    isResendLoading: false,\n                    error: error.response.data.message || \"Email verification required. Please verify your email to continue.\"\n                });\n                // Store the email that needs verification in localStorage\n                // This will help if the user refreshes the verification page\n                if (error.response?.data?.email) {\n                    localStorage.setItem(\"pendingVerificationEmail\", error.response.data.email);\n                }\n                // Pass the error up to the component to handle verification flow\n                throw error;\n            } else {\n                setState({\n                    ...state,\n                    isLoading: false,\n                    isResendLoading: false,\n                    error: error.response?.data?.message || \"Login failed\"\n                });\n            }\n        }\n    };\n    // Register user\n    const register = async (formData)=>{\n        try {\n            setState({\n                ...state,\n                isLoading: true\n            });\n            const response = await _utils_api__WEBPACK_IMPORTED_MODULE_3__.authAPI.register(formData);\n            // Check if email verification is required\n            if (response.requiresVerification) {\n                setState({\n                    ...state,\n                    isLoading: false,\n                    isResendLoading: false,\n                    error: null\n                });\n                return {\n                    requiresVerification: true,\n                    email: response.email,\n                    emailError: response.emailError || false\n                };\n            }\n            // If no verification required, proceed with login\n            const { token, user } = response;\n            localStorage.setItem(\"token\", token);\n            setState({\n                user,\n                token,\n                isAuthenticated: true,\n                isLoading: false,\n                isResendLoading: false,\n                error: null\n            });\n            router.push(\"/journals\");\n            return {\n                requiresVerification: false,\n                email: response.email\n            };\n        } catch (error) {\n            console.error(\"Register error:\", error);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: error.response?.data?.message || \"Registration failed\"\n            });\n            throw error;\n        }\n    };\n    // Verify email with OTP\n    const verifyEmail = async (email, otp)=>{\n        try {\n            setState({\n                ...state,\n                isLoading: true\n            });\n            const { token, user } = await _utils_api__WEBPACK_IMPORTED_MODULE_3__.authAPI.verifyEmail(email, otp);\n            localStorage.setItem(\"token\", token);\n            setState({\n                user,\n                token,\n                isAuthenticated: true,\n                isLoading: false,\n                isResendLoading: false,\n                error: null\n            });\n            router.push(\"/journals\");\n        } catch (error) {\n            console.error(\"Email verification error:\", error);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: error.response?.data?.message || \"Email verification failed\"\n            });\n            throw error;\n        }\n    };\n    // Resend OTP for email verification\n    const resendOTP = async (email)=>{\n        try {\n            setState({\n                ...state,\n                isResendLoading: true\n            });\n            const response = await _utils_api__WEBPACK_IMPORTED_MODULE_3__.authAPI.resendOTP(email);\n            setState({\n                ...state,\n                isResendLoading: false,\n                error: null\n            });\n            return {\n                success: true,\n                emailError: response.emailError || false\n            };\n        } catch (error) {\n            console.error(\"Resend OTP error:\", error);\n            setState({\n                ...state,\n                isResendLoading: false,\n                error: error.response?.data?.message || \"Failed to resend verification code\"\n            });\n            return {\n                success: false,\n                emailError: true\n            };\n        }\n    };\n    // Logout user\n    const logout = ()=>{\n        localStorage.removeItem(\"token\");\n        setState({\n            ...initialState,\n            isLoading: false\n        });\n        router.push(\"/login\");\n    };\n    // Change password\n    const changePassword = async (currentPassword, newPassword)=>{\n        try {\n            setState({\n                ...state,\n                isLoading: true\n            });\n            await _utils_api__WEBPACK_IMPORTED_MODULE_3__.authAPI.changePassword(currentPassword, newPassword);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: null\n            });\n        } catch (error) {\n            console.error(\"Change password error:\", error);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: error.response?.data?.message || \"Password change failed\"\n            });\n            throw error;\n        }\n    };\n    // Reset password (for super admin)\n    const resetPassword = async (userId, newPassword)=>{\n        try {\n            setState({\n                ...state,\n                isLoading: true\n            });\n            await _utils_api__WEBPACK_IMPORTED_MODULE_3__.authAPI.resetPassword(userId, newPassword);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: null\n            });\n        } catch (error) {\n            console.error(\"Reset password error:\", error);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: error.response?.data?.message || \"Password reset failed\"\n            });\n            throw error;\n        }\n    };\n    // Forgot password - request password reset\n    const forgotPassword = async (email)=>{\n        try {\n            setState({\n                ...state,\n                isLoading: true\n            });\n            const response = await _utils_api__WEBPACK_IMPORTED_MODULE_3__.authAPI.forgotPassword(email);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: null\n            });\n            return {\n                success: true,\n                email: response.email\n            };\n        } catch (error) {\n            console.error(\"Forgot password error:\", error);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: error.response?.data?.message || \"Failed to process password reset request\"\n            });\n            return {\n                success: false\n            };\n        }\n    };\n    // Verify password reset token\n    const verifyResetToken = async (email, token)=>{\n        try {\n            setState({\n                ...state,\n                isLoading: true\n            });\n            const response = await _utils_api__WEBPACK_IMPORTED_MODULE_3__.authAPI.verifyResetToken(email, token);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: null\n            });\n            return {\n                valid: response.valid\n            };\n        } catch (error) {\n            console.error(\"Verify reset token error:\", error);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: error.response?.data?.message || \"Invalid or expired reset token\"\n            });\n            return {\n                valid: false\n            };\n        }\n    };\n    // Reset password with token (from forgot password flow)\n    const resetPasswordWithToken = async (email, token, password)=>{\n        try {\n            setState({\n                ...state,\n                isLoading: true\n            });\n            await _utils_api__WEBPACK_IMPORTED_MODULE_3__.authAPI.resetPasswordWithToken(email, token, password);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: null\n            });\n        } catch (error) {\n            console.error(\"Reset password with token error:\", error);\n            setState({\n                ...state,\n                isLoading: false,\n                isResendLoading: false,\n                error: error.response?.data?.message || \"Failed to reset password\"\n            });\n            throw error;\n        }\n    };\n    // Clear error\n    const clearError = ()=>{\n        setState({\n            ...state,\n            error: null\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            ...state,\n            login,\n            register,\n            verifyEmail,\n            resendOTP,\n            logout,\n            changePassword,\n            resetPassword,\n            forgotPassword,\n            verifyResetToken,\n            resetPasswordWithToken,\n            clearError\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ICT\\\\Desktop\\\\nbu-journal2\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n        lineNumber: 409,\n        columnNumber: 5\n    }, undefined);\n};\nconst useAuth = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuthContext);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/contexts/AuthContext.tsx\n");

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _contexts_AuthContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/contexts/AuthContext */ \"./src/contexts/AuthContext.tsx\");\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-toastify */ \"react-toastify\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-toastify/dist/ReactToastify.css */ \"./node_modules/react-toastify/dist/ReactToastify.css\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/styles/globals.css */ \"./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_2__, react_toastify__WEBPACK_IMPORTED_MODULE_3__]);\n([_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_2__, react_toastify__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\nfunction MyApp({ Component, pageProps }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_2__.AuthProvider, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ICT\\\\Desktop\\\\nbu-journal2\\\\frontend\\\\src\\\\pages\\\\_app.tsx\",\n                lineNumber: 11,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_toastify__WEBPACK_IMPORTED_MODULE_3__.ToastContainer, {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: false,\n                newestOnTop: true,\n                closeOnClick: true,\n                rtl: false,\n                pauseOnFocusLoss: true,\n                draggable: true,\n                pauseOnHover: true,\n                theme: \"light\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ICT\\\\Desktop\\\\nbu-journal2\\\\frontend\\\\src\\\\pages\\\\_app.tsx\",\n                lineNumber: 12,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ICT\\\\Desktop\\\\nbu-journal2\\\\frontend\\\\src\\\\pages\\\\_app.tsx\",\n        lineNumber: 10,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTBCO0FBRTRCO0FBQ047QUFDRDtBQUNqQjtBQUU5QixTQUFTRyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFZO0lBQy9DLHFCQUNFLDhEQUFDSiwrREFBWUE7OzBCQUNYLDhEQUFDRztnQkFBVyxHQUFHQyxTQUFTOzs7Ozs7MEJBQ3hCLDhEQUFDSCwwREFBY0E7Z0JBQ2JJLFVBQVM7Z0JBQ1RDLFdBQVc7Z0JBQ1hDLGlCQUFpQjtnQkFDakJDLFdBQVc7Z0JBQ1hDLFlBQVk7Z0JBQ1pDLEtBQUs7Z0JBQ0xDLGdCQUFnQjtnQkFDaEJDLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLE9BQU07Ozs7Ozs7Ozs7OztBQUlkO0FBRUEsaUVBQWVaLEtBQUtBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uYnUtam91cm5hbC1mcm9udGVuZC8uL3NyYy9wYWdlcy9fYXBwLnRzeD9mOWQ2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEFwcFByb3BzIH0gZnJvbSAnbmV4dC9hcHAnO1xuaW1wb3J0IHsgQXV0aFByb3ZpZGVyIH0gZnJvbSAnQC9jb250ZXh0cy9BdXRoQ29udGV4dCc7XG5pbXBvcnQgeyBUb2FzdENvbnRhaW5lciB9IGZyb20gJ3JlYWN0LXRvYXN0aWZ5JztcbmltcG9ydCAncmVhY3QtdG9hc3RpZnkvZGlzdC9SZWFjdFRvYXN0aWZ5LmNzcyc7XG5pbXBvcnQgJ0Avc3R5bGVzL2dsb2JhbHMuY3NzJztcblxuZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9OiBBcHBQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxBdXRoUHJvdmlkZXI+XG4gICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgICA8VG9hc3RDb250YWluZXIgXG4gICAgICAgIHBvc2l0aW9uPVwidG9wLXJpZ2h0XCJcbiAgICAgICAgYXV0b0Nsb3NlPXszMDAwfVxuICAgICAgICBoaWRlUHJvZ3Jlc3NCYXI9e2ZhbHNlfVxuICAgICAgICBuZXdlc3RPblRvcFxuICAgICAgICBjbG9zZU9uQ2xpY2tcbiAgICAgICAgcnRsPXtmYWxzZX1cbiAgICAgICAgcGF1c2VPbkZvY3VzTG9zc1xuICAgICAgICBkcmFnZ2FibGVcbiAgICAgICAgcGF1c2VPbkhvdmVyXG4gICAgICAgIHRoZW1lPVwibGlnaHRcIlxuICAgICAgLz5cbiAgICA8L0F1dGhQcm92aWRlcj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTXlBcHA7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJBdXRoUHJvdmlkZXIiLCJUb2FzdENvbnRhaW5lciIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwicG9zaXRpb24iLCJhdXRvQ2xvc2UiLCJoaWRlUHJvZ3Jlc3NCYXIiLCJuZXdlc3RPblRvcCIsImNsb3NlT25DbGljayIsInJ0bCIsInBhdXNlT25Gb2N1c0xvc3MiLCJkcmFnZ2FibGUiLCJwYXVzZU9uSG92ZXIiLCJ0aGVtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n");

/***/ }),

/***/ "./src/types/index.ts":
/*!****************************!*\
  !*** ./src/types/index.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JournalStatus: () => (/* binding */ JournalStatus),\n/* harmony export */   UserRole: () => (/* binding */ UserRole)\n/* harmony export */ });\n// User Types\nvar UserRole;\n(function(UserRole) {\n    UserRole[\"SUPER_ADMIN\"] = \"super_admin\";\n    UserRole[\"ADMIN\"] = \"admin\";\n    UserRole[\"REVIEWER\"] = \"reviewer\";\n    UserRole[\"PUBLISHER\"] = \"publisher\";\n})(UserRole || (UserRole = {}));\nvar JournalStatus;\n(function(JournalStatus) {\n    JournalStatus[\"SUBMITTED\"] = \"submitted\";\n    JournalStatus[\"RECEIVED\"] = \"received\";\n    JournalStatus[\"ASSIGNED\"] = \"assigned\";\n    JournalStatus[\"BEING_REVIEWED\"] = \"being_reviewed\";\n    JournalStatus[\"APPROVED\"] = \"approved\";\n    JournalStatus[\"PUBLISHED\"] = \"published\";\n    JournalStatus[\"REJECTED\"] = \"rejected\";\n})(JournalStatus || (JournalStatus = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHlwZXMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxhQUFhOztVQUNEQTs7Ozs7R0FBQUEsYUFBQUE7O1VBOEJBQzs7Ozs7Ozs7R0FBQUEsa0JBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmJ1LWpvdXJuYWwtZnJvbnRlbmQvLi9zcmMvdHlwZXMvaW5kZXgudHM/NDQxNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVc2VyIFR5cGVzXG5leHBvcnQgZW51bSBVc2VyUm9sZSB7XG4gIFNVUEVSX0FETUlOID0gJ3N1cGVyX2FkbWluJyxcbiAgQURNSU4gPSAnYWRtaW4nLFxuICBSRVZJRVdFUiA9ICdyZXZpZXdlcicsXG4gIFBVQkxJU0hFUiA9ICdwdWJsaXNoZXInXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXNlciB7XG4gIGlkOiBudW1iZXI7XG4gIHVzZXJuYW1lOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIGZpcnN0X25hbWU6IHN0cmluZztcbiAgbGFzdF9uYW1lOiBzdHJpbmc7XG4gIHByb2ZpbGVfcGljdHVyZT86IHN0cmluZztcbiAgcm9sZTogVXNlclJvbGU7XG4gIGRlcGFydG1lbnQ/OiBzdHJpbmc7XG4gIGNyZWF0ZWRfYXQ6IHN0cmluZztcbiAgaXNfZW1haWxfdmVyaWZpZWQ/OiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF1dGhTdGF0ZSB7XG4gIHVzZXI6IFVzZXIgfCBudWxsO1xuICB0b2tlbjogc3RyaW5nIHwgbnVsbDtcbiAgaXNBdXRoZW50aWNhdGVkOiBib29sZWFuO1xuICBpc0xvYWRpbmc6IGJvb2xlYW47XG4gIGlzUmVzZW5kTG9hZGluZzogYm9vbGVhbjtcbiAgZXJyb3I6IHN0cmluZyB8IG51bGw7XG59XG5cbi8vIEpvdXJuYWwgVHlwZXNcbmV4cG9ydCBlbnVtIEpvdXJuYWxTdGF0dXMge1xuICBTVUJNSVRURUQgPSAnc3VibWl0dGVkJyxcbiAgUkVDRUlWRUQgPSAncmVjZWl2ZWQnLFxuICBBU1NJR05FRCA9ICdhc3NpZ25lZCcsXG4gIEJFSU5HX1JFVklFV0VEID0gJ2JlaW5nX3Jldmlld2VkJyxcbiAgQVBQUk9WRUQgPSAnYXBwcm92ZWQnLFxuICBQVUJMSVNIRUQgPSAncHVibGlzaGVkJyxcbiAgUkVKRUNURUQgPSAncmVqZWN0ZWQnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSm91cm5hbEF1dGhvciB7XG4gIGlkOiBudW1iZXI7XG4gIGpvdXJuYWxfaWQ6IG51bWJlcjtcbiAgYXV0aG9yX25hbWU6IHN0cmluZztcbiAgYXV0aG9yX2VtYWlsPzogc3RyaW5nO1xuICBhdXRob3JfZGVwYXJ0bWVudD86IHN0cmluZztcbiAgaXNfcHJpbWFyeTogYm9vbGVhbjtcbiAgY3JlYXRlZF9hdDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEpvdXJuYWwge1xuICBpZDogbnVtYmVyO1xuICB0aXRsZTogc3RyaW5nO1xuICBhYnN0cmFjdDogc3RyaW5nO1xuICBwdWJsaXNoZXJfaWQ6IG51bWJlcjtcbiAgcmV2aWV3ZXJfaWQ/OiBudW1iZXI7XG4gIGZpbGVfcGF0aDogc3RyaW5nO1xuICBzdGF0dXM6IEpvdXJuYWxTdGF0dXMgfCBzdHJpbmc7XG4gIGNyZWF0ZWRfYXQ6IHN0cmluZztcbiAgdXBkYXRlZF9hdDogc3RyaW5nO1xuICBwdWJsaXNoZWRfZGF0ZT86IHN0cmluZztcbiAgcHVibGljYXRpb25fbnVtYmVyPzogc3RyaW5nO1xuICBwdWJsaXNoZXJfZmlyc3RfbmFtZT86IHN0cmluZztcbiAgcHVibGlzaGVyX2xhc3RfbmFtZT86IHN0cmluZztcbiAgcHVibGlzaGVyX3Byb2ZpbGVfcGljdHVyZT86IHN0cmluZztcbiAgcmV2aWV3ZXJfZmlyc3RfbmFtZT86IHN0cmluZztcbiAgcmV2aWV3ZXJfbGFzdF9uYW1lPzogc3RyaW5nO1xuICBhdXRob3JzPzogSm91cm5hbEF1dGhvcltdO1xuICByZXZpZXdzPzogSm91cm5hbFJldmlld1tdO1xuICBhdXRob3JfbmFtZXM/OiBzdHJpbmc7IC8vIEFkZGVkIGZvciBkaXNwbGF5IHB1cnBvc2VzXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSm91cm5hbFJldmlldyB7XG4gIGlkOiBudW1iZXI7XG4gIGpvdXJuYWxfaWQ6IG51bWJlcjtcbiAgcmV2aWV3ZXJfaWQ6IG51bWJlcjtcbiAgc3RhdHVzOiAncGVuZGluZycgfCAnYXBwcm92ZWQnIHwgJ3JlamVjdGVkJztcbiAgY29tbWVudHM6IHN0cmluZztcbiAgcmV2aWV3ZWRfYXQ6IHN0cmluZztcbiAgY3JlYXRlZF9hdDogc3RyaW5nO1xuICBmaXJzdF9uYW1lOiBzdHJpbmc7XG4gIGxhc3RfbmFtZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEpvdXJuYWxTdWJtaXNzaW9uIHtcbiAgdGl0bGU6IHN0cmluZztcbiAgYWJzdHJhY3Q6IHN0cmluZztcbiAgYXV0aG9yczoge1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBlbWFpbD86IHN0cmluZztcbiAgICBkZXBhcnRtZW50Pzogc3RyaW5nO1xuICAgIGlzUHJpbWFyeTogYm9vbGVhbjtcbiAgfVtdO1xuICBqb3VybmFsRmlsZTogRmlsZTtcbn1cblxuLy8gRmlsdGVyIFR5cGVzXG5leHBvcnQgaW50ZXJmYWNlIEpvdXJuYWxGaWx0ZXJzIHtcbiAgc29ydF9ieT86ICd0aXRsZScgfCAncHVibGlzaGVkX2RhdGUnIHwgJ2NyZWF0ZWRfYXQnO1xuICBzb3J0X29yZGVyPzogJ0FTQycgfCAnREVTQyc7XG4gIHNlYXJjaD86IHN0cmluZztcbiAgbGltaXQ/OiBudW1iZXI7XG4gIHBhZ2U/OiBudW1iZXI7XG59XG5cbi8vIEFQSSBSZXNwb25zZSBUeXBlc1xuZXhwb3J0IGludGVyZmFjZSBBcGlSZXNwb25zZTxUPiB7XG4gIG1lc3NhZ2U/OiBzdHJpbmc7XG4gIGVycm9yPzogc3RyaW5nO1xuICBkYXRhPzogVDtcbn1cblxuLy8gRmlsdGVyIFR5cGVzXG5leHBvcnQgaW50ZXJmYWNlIEpvdXJuYWxGaWx0ZXJzIHtcbiAgc3RhdHVzPzogSm91cm5hbFN0YXR1cztcbiAgc29ydF9ieT86ICd0aXRsZScgfCAnY3JlYXRlZF9hdCcgfCAncHVibGlzaGVkX2RhdGUnO1xuICBzb3J0X29yZGVyPzogJ0FTQycgfCAnREVTQyc7XG59XG4iXSwibmFtZXMiOlsiVXNlclJvbGUiLCJKb3VybmFsU3RhdHVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/types/index.ts\n");

/***/ }),

/***/ "./src/utils/api.ts":
/*!**************************!*\
  !*** ./src/utils/api.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authAPI: () => (/* binding */ authAPI),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   journalAPI: () => (/* binding */ journalAPI),\n/* harmony export */   reviewAPI: () => (/* binding */ reviewAPI),\n/* harmony export */   userAPI: () => (/* binding */ userAPI)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Check if code is running in browser environment\nconst isBrowser = \"undefined\" !== \"undefined\";\n// IMPORTANT: Hard-coded backend URL to avoid any caching issues\nconst BACKEND_URL = \"https://nbu-journal-backend.onrender.com/api\";\n// Create axios instance with the fixed backend URL\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: BACKEND_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n});\nconsole.log(\"API configured with URL:\", BACKEND_URL);\n// Add auth token to requests if available\napi.interceptors.request.use((config)=>{\n    // Only try to get token from localStorage in browser environment\n    if (isBrowser) {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n    }\n    console.log(\"Making request to:\", config.url, \"with baseURL:\", config.baseURL);\n    return config;\n}, (error)=>Promise.reject(error));\n// Auth API\nconst authAPI = {\n    register: async (formData)=>{\n        const response = await api.post(\"/auth/register\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    verifyEmail: async (email, otp)=>{\n        const response = await api.post(\"/auth/verify-email\", {\n            email,\n            otp\n        });\n        return response.data;\n    },\n    resendOTP: async (email)=>{\n        const response = await api.post(\"/auth/resend-otp\", {\n            email\n        });\n        return response.data;\n    },\n    login: async (email, password)=>{\n        const response = await api.post(\"/auth/login\", {\n            email,\n            password\n        });\n        return response.data;\n    },\n    getProfile: async ()=>{\n        const response = await api.get(\"/auth/profile\");\n        return response.data;\n    },\n    changePassword: async (currentPassword, newPassword)=>{\n        const response = await api.put(\"/auth/change-password\", {\n            currentPassword,\n            newPassword\n        });\n        return response.data;\n    },\n    resetPassword: async (userId, newPassword)=>{\n        const response = await api.put(\"/auth/reset-password\", {\n            userId,\n            newPassword\n        });\n        return response.data;\n    },\n    forgotPassword: async (email)=>{\n        const response = await api.post(\"/auth/forgot-password\", {\n            email\n        });\n        return response.data;\n    },\n    verifyResetToken: async (email, token)=>{\n        const response = await api.post(\"/auth/verify-reset-token\", {\n            email,\n            token\n        });\n        return response.data;\n    },\n    resetPasswordWithToken: async (email, token, password)=>{\n        const response = await api.post(\"/auth/reset-password-with-token\", {\n            email,\n            token,\n            password\n        });\n        return response.data;\n    }\n};\n// User API\nconst userAPI = {\n    getAllUsers: async (role)=>{\n        const response = await api.get(\"/users\", {\n            params: {\n                role\n            }\n        });\n        return response.data;\n    },\n    getUserById: async (id)=>{\n        const response = await api.get(`/users/${id}`);\n        return response.data;\n    },\n    createUser: async (userData)=>{\n        const response = await api.post(\"/users\", userData);\n        return response.data;\n    },\n    updateUser: async (id, formData)=>{\n        const response = await api.put(`/users/${id}`, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    deleteUser: async (id)=>{\n        const response = await api.delete(`/users/${id}`);\n        return response.data;\n    },\n    resetPassword: async (userId, newPassword)=>{\n        const response = await api.post(`/auth/reset-password`, {\n            userId,\n            newPassword\n        });\n        return response.data;\n    }\n};\n// Journal API\nconst journalAPI = {\n    getPublishedJournals: async (filters = {})=>{\n        // Use params object instead of manually constructing URL\n        const response = await api.get(\"/journals/published\", {\n            params: {\n                sort_by: filters.sort_by || \"published_date\",\n                sort_order: filters.sort_order || \"DESC\",\n                search: filters.search || \"\",\n                limit: filters.limit || null,\n                page: filters.page || null,\n                _t: new Date().getTime() // Cache-busting parameter\n            }\n        });\n        console.log(\"API response for published journals:\", response.data);\n        return response.data;\n    },\n    createJournal: async (formData)=>{\n        const response = await api.post(\"/journals\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    getAllJournals: async (filters)=>{\n        const response = await api.get(\"/journals\", {\n            params: filters\n        });\n        return response.data;\n    },\n    getJournalById: async (id)=>{\n        try {\n            // First try to get the journal as a published journal (no auth required)\n            const response = await api.get(`/journals/published/${id}`);\n            return response.data;\n        } catch (error) {\n            // If that fails (e.g., journal is not published), fall back to the authenticated route\n            const response = await api.get(`/journals/${id}`);\n            return response.data;\n        }\n    },\n    getAllReviewers: async ()=>{\n        const response = await api.get(\"/journals/reviewers\");\n        return response.data;\n    },\n    assignReviewer: async (journalId, reviewerId)=>{\n        const response = await api.put(`/journals/${journalId}/assign`, {\n            reviewer_id: reviewerId\n        });\n        return response.data;\n    },\n    reviewJournal: async (journalId, status, comments)=>{\n        const response = await api.put(`/journals/${journalId}/review`, {\n            status,\n            comments\n        });\n        return response.data;\n    },\n    getJournalFile: async (journalId)=>{\n        const response = await api.get(`/journals/${journalId}/file`);\n        return response.data;\n    },\n    downloadJournal: async (journalId)=>{\n        try {\n            // First try to get the journal to check if it's published\n            const { journal } = await journalAPI.getJournalById(journalId);\n            // For published journals, try to get file info from the public endpoint\n            let fileInfo;\n            try {\n                // For published journals, we can try the public endpoint first\n                if (journal.status === \"published\") {\n                    // Try to get file info from the public endpoint\n                    const response = await api.get(`/journals/published/${journalId}/file`);\n                    fileInfo = response.data;\n                } else {\n                    // For non-published journals, use the authenticated endpoint\n                    fileInfo = await journalAPI.getJournalFile(journalId);\n                }\n            } catch (error) {\n                console.log(\"Could not get file info, proceeding with direct download\", error);\n            }\n            // If we have Google Drive file info with a download URL, use that\n            if (fileInfo && fileInfo.downloadUrl) {\n                console.log(\"Using Google Drive download URL:\", fileInfo.downloadUrl);\n                window.open(fileInfo.downloadUrl, \"_blank\");\n                return;\n            }\n            // If Google Drive info is not available, try direct download\n            console.log(\"Falling back to direct download\");\n            // Create a temporary hidden anchor element\n            const a = document.createElement(\"a\");\n            a.style.display = \"none\";\n            // Use the hardcoded backend URL to avoid any caching issues\n            const apiBaseUrl = BACKEND_URL.replace(\"/api\", \"\");\n            // Use the public route for published journals, otherwise use the authenticated route\n            if (journal.status === \"published\") {\n                a.href = `${apiBaseUrl}/api/journals/published/${journalId}/download`;\n                // Try alternative path if API base URL doesn't include /api\n                if (!apiBaseUrl.includes(\"/api\")) {\n                    a.href = `${apiBaseUrl}/journals/published/${journalId}/download`;\n                }\n            } else {\n                // Fallback to the authenticated route\n                const token = localStorage.getItem(\"token\");\n                a.href = `${apiBaseUrl}/api/journals/${journalId}/download`;\n                // Try alternative path if API base URL doesn't include /api\n                if (!apiBaseUrl.includes(\"/api\")) {\n                    a.href = `${apiBaseUrl}/journals/${journalId}/download`;\n                }\n                // Add the token as a query parameter\n                if (token) {\n                    a.href += `?token=${token}`;\n                }\n            }\n            console.log(\"Download URL:\", a.href);\n            // Append to body, click, and remove\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n        } catch (error) {\n            console.error(\"Error downloading journal:\", error);\n        }\n    },\n    deleteJournal: async (journalId)=>{\n        const response = await api.delete(`/journals/${journalId}`);\n        return response.data;\n    },\n    updateJournalStatus: async (journalId, status)=>{\n        const response = await api.put(`/journals/${journalId}/status`, {\n            status\n        });\n        return response.data;\n    },\n    publishJournal: async (journalId, publicationNumber)=>{\n        // Use publication_number to match the backend's expected parameter name\n        const response = await api.put(`/journals/${journalId}/publish`, {\n            publication_number: publicationNumber\n        });\n        return response.data;\n    },\n    unpublishJournal: async (journalId)=>{\n        // When unpublishing, set the status back to 'approved' since that's the state before publishing\n        const response = await api.put(`/journals/${journalId}/unpublish`, {\n            status: \"approved\"\n        });\n        return response.data;\n    }\n};\n// Review API\nconst reviewAPI = {\n    getJournalReviews: async (journalId)=>{\n        const response = await api.get(`/reviews/journal/${journalId}`);\n        return response.data;\n    },\n    getAssignedReviews: async ()=>{\n        const response = await api.get(\"/reviews/assigned\");\n        return response.data;\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (api);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/api.ts\n");

/***/ }),

/***/ "./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ (() => {



/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = import("axios");;

/***/ }),

/***/ "react-toastify":
/*!*********************************!*\
  !*** external "react-toastify" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = import("react-toastify");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/react-toastify"], () => (__webpack_exec__("./src/pages/_app.tsx")));
module.exports = __webpack_exports__;

})();