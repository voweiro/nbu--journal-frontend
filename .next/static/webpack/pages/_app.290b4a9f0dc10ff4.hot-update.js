"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/api.ts":
/*!**************************!*\
  !*** ./src/utils/api.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authAPI: function() { return /* binding */ authAPI; },\n/* harmony export */   journalAPI: function() { return /* binding */ journalAPI; },\n/* harmony export */   reviewAPI: function() { return /* binding */ reviewAPI; },\n/* harmony export */   userAPI: function() { return /* binding */ userAPI; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"./src/utils/config.ts\");\n\n// Check if code is running in browser environment\nconst isBrowser = \"object\" !== \"undefined\";\n// IMPORTANT: Hard-coded backend URL to avoid any caching issues\nconst BACKEND_URL = \"https://nbu-journal-backend.onrender.com/api\";\n// Create axios instance with the fixed backend URL\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: BACKEND_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n});\nconsole.log(\"API configured with URL:\", BACKEND_URL);\n// Add auth token to requests if available\napi.interceptors.request.use((config)=>{\n    // Only try to get token from localStorage in browser environment\n    if (isBrowser) {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            config.headers.Authorization = \"Bearer \".concat(token);\n        }\n    }\n    console.log(\"Making request to:\", config.url, \"with baseURL:\", config.baseURL);\n    return config;\n}, (error)=>Promise.reject(error));\n\n// Auth API\nconst authAPI = {\n    register: async (formData)=>{\n        const response = await api.post(\"/auth/register\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    verifyEmail: async (email, otp)=>{\n        const response = await api.post(\"/auth/verify-email\", {\n            email,\n            otp\n        });\n        return response.data;\n    },\n    resendOTP: async (email)=>{\n        const response = await api.post(\"/auth/resend-otp\", {\n            email\n        });\n        return response.data;\n    },\n    login: async (email, password)=>{\n        const response = await api.post(\"/auth/login\", {\n            email,\n            password\n        });\n        return response.data;\n    },\n    getProfile: async ()=>{\n        const response = await api.get(\"/auth/profile\");\n        return response.data;\n    },\n    changePassword: async (currentPassword, newPassword)=>{\n        const response = await api.put(\"/auth/change-password\", {\n            currentPassword,\n            newPassword\n        });\n        return response.data;\n    },\n    resetPassword: async (userId, newPassword)=>{\n        const response = await api.put(\"/auth/reset-password\", {\n            userId,\n            newPassword\n        });\n        return response.data;\n    },\n    forgotPassword: async (email)=>{\n        // Generate the correct password reset URL for the frontend\n        const resetUrl = (0,_config__WEBPACK_IMPORTED_MODULE_1__.getPasswordResetUrl)(email, \"TOKEN_PLACEHOLDER\");\n        const baseResetUrl = resetUrl.replace(\"TOKEN_PLACEHOLDER\", \"\");\n        console.log(\"Sending password reset request with URL template:\", baseResetUrl);\n        // Send the base URL to the backend so it can generate the correct link\n        const response = await api.post(\"/auth/forgot-password\", {\n            email,\n            reset_url_template: baseResetUrl\n        });\n        return response.data;\n    },\n    verifyResetToken: async (email, token)=>{\n        const response = await api.post(\"/auth/verify-reset-token\", {\n            email,\n            token\n        });\n        return response.data;\n    },\n    resetPasswordWithToken: async (email, token, password)=>{\n        const response = await api.post(\"/auth/reset-password-with-token\", {\n            email,\n            token,\n            password\n        });\n        return response.data;\n    }\n};\n// User API\nconst userAPI = {\n    getAllUsers: async (role)=>{\n        const response = await api.get(\"/users\", {\n            params: {\n                role\n            }\n        });\n        return response.data;\n    },\n    getUserById: async (id)=>{\n        const response = await api.get(\"/users/\".concat(id));\n        return response.data;\n    },\n    createUser: async (userData)=>{\n        const response = await api.post(\"/users\", userData);\n        return response.data;\n    },\n    updateUser: async (id, formData)=>{\n        const response = await api.put(\"/users/\".concat(id), formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    deleteUser: async (id)=>{\n        const response = await api.delete(\"/users/\".concat(id));\n        return response.data;\n    },\n    resetPassword: async (userId, newPassword)=>{\n        const response = await api.post(\"/auth/reset-password\", {\n            userId,\n            newPassword\n        });\n        return response.data;\n    }\n};\n// Journal API\nconst journalAPI = {\n    getPublishedJournals: async function() {\n        let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        // Use params object instead of manually constructing URL\n        const response = await api.get(\"/journals/published\", {\n            params: {\n                sort_by: filters.sort_by || \"published_date\",\n                sort_order: filters.sort_order || \"DESC\",\n                search: filters.search || \"\",\n                limit: filters.limit || null,\n                page: filters.page || null,\n                _t: new Date().getTime() // Cache-busting parameter\n            }\n        });\n        console.log(\"API response for published journals:\", response.data);\n        return response.data;\n    },\n    createJournal: async (formData)=>{\n        const response = await api.post(\"/journals\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    getAllJournals: async (filters)=>{\n        const response = await api.get(\"/journals\", {\n            params: filters\n        });\n        return response.data;\n    },\n    getJournalById: async (id)=>{\n        try {\n            // First try to get the journal as a published journal (no auth required)\n            const response = await api.get(\"/journals/published/\".concat(id));\n            return response.data;\n        } catch (error) {\n            // If that fails (e.g., journal is not published), fall back to the authenticated route\n            const response = await api.get(\"/journals/\".concat(id));\n            return response.data;\n        }\n    },\n    getAllReviewers: async ()=>{\n        const response = await api.get(\"/journals/reviewers\");\n        return response.data;\n    },\n    assignReviewer: async (journalId, reviewerId)=>{\n        const response = await api.put(\"/journals/\".concat(journalId, \"/assign\"), {\n            reviewer_id: reviewerId\n        });\n        return response.data;\n    },\n    reviewJournal: async (journalId, status, comments)=>{\n        const response = await api.put(\"/journals/\".concat(journalId, \"/review\"), {\n            status,\n            comments\n        });\n        return response.data;\n    },\n    getJournalFile: async (journalId)=>{\n        const response = await api.get(\"/journals/\".concat(journalId, \"/file\"));\n        return response.data;\n    },\n    downloadJournal: async (journalId)=>{\n        try {\n            // First try to get the journal to check if it's published\n            const { journal } = await journalAPI.getJournalById(journalId);\n            // For published journals, try to get file info from the public endpoint\n            let fileInfo;\n            try {\n                // For published journals, we can try the public endpoint first\n                if (journal.status === \"published\") {\n                    // Try to get file info from the public endpoint\n                    const response = await api.get(\"/journals/published/\".concat(journalId, \"/file\"));\n                    fileInfo = response.data;\n                } else {\n                    // For non-published journals, use the authenticated endpoint\n                    fileInfo = await journalAPI.getJournalFile(journalId);\n                }\n            } catch (error) {\n                console.log(\"Could not get file info, proceeding with direct download\", error);\n            }\n            // If we have Google Drive file info with a download URL, use that\n            if (fileInfo && fileInfo.downloadUrl) {\n                console.log(\"Using Google Drive download URL:\", fileInfo.downloadUrl);\n                window.open(fileInfo.downloadUrl, \"_blank\");\n                return;\n            }\n            // If Google Drive info is not available, try direct download\n            console.log(\"Falling back to direct download\");\n            // Create a temporary hidden anchor element\n            const a = document.createElement(\"a\");\n            a.style.display = \"none\";\n            // Use the hardcoded backend URL to avoid any caching issues\n            const apiBaseUrl = BACKEND_URL.replace(\"/api\", \"\");\n            // Use the public route for published journals, otherwise use the authenticated route\n            if (journal.status === \"published\") {\n                a.href = \"\".concat(apiBaseUrl, \"/api/journals/published/\").concat(journalId, \"/download\");\n                // Try alternative path if API base URL doesn't include /api\n                if (!apiBaseUrl.includes(\"/api\")) {\n                    a.href = \"\".concat(apiBaseUrl, \"/journals/published/\").concat(journalId, \"/download\");\n                }\n            } else {\n                // Fallback to the authenticated route\n                const token = localStorage.getItem(\"token\");\n                a.href = \"\".concat(apiBaseUrl, \"/api/journals/\").concat(journalId, \"/download\");\n                // Try alternative path if API base URL doesn't include /api\n                if (!apiBaseUrl.includes(\"/api\")) {\n                    a.href = \"\".concat(apiBaseUrl, \"/journals/\").concat(journalId, \"/download\");\n                }\n                // Add the token as a query parameter\n                if (token) {\n                    a.href += \"?token=\".concat(token);\n                }\n            }\n            console.log(\"Download URL:\", a.href);\n            // Append to body, click, and remove\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n        } catch (error) {\n            console.error(\"Error downloading journal:\", error);\n        }\n    },\n    deleteJournal: async (journalId)=>{\n        const response = await api.delete(\"/journals/\".concat(journalId));\n        return response.data;\n    },\n    updateJournalStatus: async (journalId, status)=>{\n        const response = await api.put(\"/journals/\".concat(journalId, \"/status\"), {\n            status\n        });\n        return response.data;\n    },\n    publishJournal: async (journalId, publicationNumber)=>{\n        // Use publication_number to match the backend's expected parameter name\n        const response = await api.put(\"/journals/\".concat(journalId, \"/publish\"), {\n            publication_number: publicationNumber\n        });\n        return response.data;\n    },\n    unpublishJournal: async (journalId)=>{\n        // When unpublishing, set the status back to 'approved' since that's the state before publishing\n        const response = await api.put(\"/journals/\".concat(journalId, \"/unpublish\"), {\n            status: \"approved\"\n        });\n        return response.data;\n    }\n};\n// Review API\nconst reviewAPI = {\n    getJournalReviews: async (journalId)=>{\n        const response = await api.get(\"/reviews/journal/\".concat(journalId));\n        return response.data;\n    },\n    getAssignedReviews: async ()=>{\n        const response = await api.get(\"/reviews/assigned\");\n        return response.data;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/api.ts\n"));

/***/ }),

/***/ "./src/utils/config.ts":
/*!*****************************!*\
  !*** ./src/utils/config.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBackendBaseUrl: function() { return /* binding */ getBackendBaseUrl; },\n/* harmony export */   getFrontendBaseUrl: function() { return /* binding */ getFrontendBaseUrl; },\n/* harmony export */   getPasswordResetUrl: function() { return /* binding */ getPasswordResetUrl; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n// Frontend configuration\n// Get the base URL for the frontend\nconst getFrontendBaseUrl = ()=>{\n    // In production, use the actual domain\n    if (process.env.NEXT_PUBLIC_FRONTEND_URL) {\n        return process.env.NEXT_PUBLIC_FRONTEND_URL;\n    }\n    // In development, use localhost\n    if (true) {\n        return window.location.origin;\n    }\n    // Default fallback\n    return \"https://nbu-journal.vercel.app\";\n};\n// Get the full URL for password reset\nconst getPasswordResetUrl = (email, token)=>{\n    return \"\".concat(getFrontendBaseUrl(), \"/password-reset?email=\").concat(encodeURIComponent(email), \"&token=\").concat(encodeURIComponent(token));\n};\n// Get the base URL for the backend API\nconst getBackendBaseUrl = ()=>{\n    if (true) {\n        return \"https://nbu-journal-api.onrender.com/api\";\n    }\n    // Default to the Render backend\n    return \"https://nbu-journal-backend.onrender.com/api\";\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    getFrontendBaseUrl,\n    getPasswordResetUrl,\n    getBackendBaseUrl\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvY29uZmlnLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSx5QkFBeUI7QUFFekIsb0NBQW9DO0FBQzdCLE1BQU1BLHFCQUFxQjtJQUNoQyx1Q0FBdUM7SUFDdkMsSUFBSUMsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQyx3QkFBd0IsRUFBRTtRQUN4QyxPQUFPRixPQUFPQSxDQUFDQyxHQUFHLENBQUNDLHdCQUF3QjtJQUM3QztJQUVBLGdDQUFnQztJQUNoQyxJQUFJLElBQWtCLEVBQWE7UUFDakMsT0FBT0MsT0FBT0MsUUFBUSxDQUFDQyxNQUFNO0lBQy9CO0lBRUEsbUJBQW1CO0lBQ25CLE9BQU87QUFDVCxFQUFFO0FBRUYsc0NBQXNDO0FBQy9CLE1BQU1DLHNCQUFzQixDQUFDQyxPQUFlQztJQUNqRCxPQUFPLEdBQWdEQyxPQUE3Q1Ysc0JBQXFCLDBCQUEyRFUsT0FBbkNBLG1CQUFtQkYsUUFBTyxXQUFtQyxPQUExQkUsbUJBQW1CRDtBQUMvRyxFQUFFO0FBRUYsdUNBQXVDO0FBQ2hDLE1BQU1FLG9CQUFvQjtJQUMvQixJQUFJVixJQUErQixFQUFFO1FBQ25DLE9BQU9BLDBDQUErQjtJQUN4QztJQUVBLGdDQUFnQztJQUNoQyxPQUFPO0FBQ1QsRUFBRTtBQUVGLCtEQUFlO0lBQ2JEO0lBQ0FPO0lBQ0FJO0FBQ0YsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9jb25maWcudHM/ZTg3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGcm9udGVuZCBjb25maWd1cmF0aW9uXG5cbi8vIEdldCB0aGUgYmFzZSBVUkwgZm9yIHRoZSBmcm9udGVuZFxuZXhwb3J0IGNvbnN0IGdldEZyb250ZW5kQmFzZVVybCA9ICgpOiBzdHJpbmcgPT4ge1xuICAvLyBJbiBwcm9kdWN0aW9uLCB1c2UgdGhlIGFjdHVhbCBkb21haW5cbiAgaWYgKHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZST05URU5EX1VSTCkge1xuICAgIHJldHVybiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GUk9OVEVORF9VUkw7XG4gIH1cbiAgXG4gIC8vIEluIGRldmVsb3BtZW50LCB1c2UgbG9jYWxob3N0XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiB3aW5kb3cubG9jYXRpb24ub3JpZ2luO1xuICB9XG4gIFxuICAvLyBEZWZhdWx0IGZhbGxiYWNrXG4gIHJldHVybiAnaHR0cHM6Ly9uYnUtam91cm5hbC52ZXJjZWwuYXBwJztcbn07XG5cbi8vIEdldCB0aGUgZnVsbCBVUkwgZm9yIHBhc3N3b3JkIHJlc2V0XG5leHBvcnQgY29uc3QgZ2V0UGFzc3dvcmRSZXNldFVybCA9IChlbWFpbDogc3RyaW5nLCB0b2tlbjogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIGAke2dldEZyb250ZW5kQmFzZVVybCgpfS9wYXNzd29yZC1yZXNldD9lbWFpbD0ke2VuY29kZVVSSUNvbXBvbmVudChlbWFpbCl9JnRva2VuPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRva2VuKX1gO1xufTtcblxuLy8gR2V0IHRoZSBiYXNlIFVSTCBmb3IgdGhlIGJhY2tlbmQgQVBJXG5leHBvcnQgY29uc3QgZ2V0QmFja2VuZEJhc2VVcmwgPSAoKTogc3RyaW5nID0+IHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwpIHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTDtcbiAgfVxuICBcbiAgLy8gRGVmYXVsdCB0byB0aGUgUmVuZGVyIGJhY2tlbmRcbiAgcmV0dXJuICdodHRwczovL25idS1qb3VybmFsLWJhY2tlbmQub25yZW5kZXIuY29tL2FwaSc7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGdldEZyb250ZW5kQmFzZVVybCxcbiAgZ2V0UGFzc3dvcmRSZXNldFVybCxcbiAgZ2V0QmFja2VuZEJhc2VVcmxcbn07XG4iXSwibmFtZXMiOlsiZ2V0RnJvbnRlbmRCYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0ZST05URU5EX1VSTCIsIndpbmRvdyIsImxvY2F0aW9uIiwib3JpZ2luIiwiZ2V0UGFzc3dvcmRSZXNldFVybCIsImVtYWlsIiwidG9rZW4iLCJlbmNvZGVVUklDb21wb25lbnQiLCJnZXRCYWNrZW5kQmFzZVVybCIsIk5FWFRfUFVCTElDX0FQSV9VUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/config.ts\n"));

/***/ })

});