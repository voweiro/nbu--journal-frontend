"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/api.ts":
/*!**************************!*\
  !*** ./src/utils/api.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authAPI: function() { return /* binding */ authAPI; },\n/* harmony export */   journalAPI: function() { return /* binding */ journalAPI; },\n/* harmony export */   reviewAPI: function() { return /* binding */ reviewAPI; },\n/* harmony export */   userAPI: function() { return /* binding */ userAPI; }\n/* harmony export */ });\n/* harmony import */ var _corsAwareApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./corsAwareApi */ \"./src/utils/corsAwareApi.js\");\n\n// Use the CORS-aware API client instead of creating a new one\nconst api = _corsAwareApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n// Auth API\nconst authAPI = {\n    register: async (formData)=>{\n        const response = await api.post(\"/auth/register\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    verifyEmail: async (email, otp)=>{\n        const response = await api.post(\"/auth/verify-email\", {\n            email,\n            otp\n        });\n        return response.data;\n    },\n    resendOTP: async (email)=>{\n        const response = await api.post(\"/auth/resend-otp\", {\n            email\n        });\n        return response.data;\n    },\n    login: async (email, password)=>{\n        const response = await api.post(\"/auth/login\", {\n            email,\n            password\n        });\n        return response.data;\n    },\n    getProfile: async ()=>{\n        const response = await api.get(\"/auth/profile\");\n        return response.data;\n    },\n    changePassword: async (currentPassword, newPassword)=>{\n        const response = await api.put(\"/auth/change-password\", {\n            currentPassword,\n            newPassword\n        });\n        return response.data;\n    },\n    resetPassword: async (userId, newPassword)=>{\n        const response = await api.put(\"/auth/reset-password\", {\n            userId,\n            newPassword\n        });\n        return response.data;\n    },\n    forgotPassword: async (email)=>{\n        const response = await api.post(\"/auth/forgot-password\", {\n            email\n        });\n        return response.data;\n    },\n    verifyResetToken: async (email, token)=>{\n        const response = await api.post(\"/auth/verify-reset-token\", {\n            email,\n            token\n        });\n        return response.data;\n    },\n    resetPasswordWithToken: async (email, token, password)=>{\n        const response = await api.post(\"/auth/reset-password-with-token\", {\n            email,\n            token,\n            password\n        });\n        return response.data;\n    }\n};\n// User API\nconst userAPI = {\n    getAllUsers: async (role)=>{\n        const response = await api.get(\"/users\", {\n            params: {\n                role\n            }\n        });\n        return response.data;\n    },\n    getUserById: async (id)=>{\n        const response = await api.get(\"/users/\".concat(id));\n        return response.data;\n    },\n    createUser: async (userData)=>{\n        const response = await api.post(\"/users\", userData);\n        return response.data;\n    },\n    updateUser: async (id, formData)=>{\n        const response = await api.put(\"/users/\".concat(id), formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    deleteUser: async (id)=>{\n        const response = await api.delete(\"/users/\".concat(id));\n        return response.data;\n    },\n    resetPassword: async (userId, newPassword)=>{\n        const response = await api.post(\"/auth/reset-password\", {\n            userId,\n            newPassword\n        });\n        return response.data;\n    }\n};\n// Journal API\nconst journalAPI = {\n    getPublishedJournals: async function() {\n        let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        // Use params object instead of manually constructing URL\n        const response = await api.get(\"/journals/published\", {\n            params: {\n                sort_by: filters.sort_by || \"published_date\",\n                sort_order: filters.sort_order || \"DESC\",\n                search: filters.search || \"\",\n                limit: filters.limit || null,\n                page: filters.page || null,\n                _t: new Date().getTime() // Cache-busting parameter\n            }\n        });\n        console.log(\"API response for published journals:\", response.data);\n        return response.data;\n    },\n    createJournal: async (formData)=>{\n        const response = await api.post(\"/journals\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    getAllJournals: async (filters)=>{\n        const response = await api.get(\"/journals\", {\n            params: filters\n        });\n        return response.data;\n    },\n    getJournalById: async (id)=>{\n        try {\n            // First try to get the journal as a published journal (no auth required)\n            const response = await api.get(\"/journals/published/\".concat(id));\n            return response.data;\n        } catch (error) {\n            // If that fails (e.g., journal is not published), fall back to the authenticated route\n            const response = await api.get(\"/journals/\".concat(id));\n            return response.data;\n        }\n    },\n    getAllReviewers: async ()=>{\n        const response = await api.get(\"/journals/reviewers\");\n        return response.data;\n    },\n    assignReviewer: async (journalId, reviewerId)=>{\n        const response = await api.put(\"/journals/\".concat(journalId, \"/assign\"), {\n            reviewer_id: reviewerId\n        });\n        return response.data;\n    },\n    reviewJournal: async (journalId, status, comments)=>{\n        const response = await api.put(\"/journals/\".concat(journalId, \"/review\"), {\n            status,\n            comments\n        });\n        return response.data;\n    },\n    getJournalFile: async (journalId)=>{\n        const response = await api.get(\"/journals/\".concat(journalId, \"/file\"));\n        return response.data;\n    },\n    downloadJournal: async (journalId)=>{\n        try {\n            // First try to get the journal to check if it's published\n            const { journal } = await journalAPI.getJournalById(journalId);\n            // For published journals, try to get file info from the public endpoint\n            let fileInfo;\n            try {\n                // For published journals, we can try the public endpoint first\n                if (journal.status === \"published\") {\n                    // Try to get file info from the public endpoint\n                    const response = await api.get(\"/journals/published/\".concat(journalId, \"/file\"));\n                    fileInfo = response.data;\n                } else {\n                    // For non-published journals, use the authenticated endpoint\n                    fileInfo = await journalAPI.getJournalFile(journalId);\n                }\n            } catch (error) {\n                console.log(\"Could not get file info, proceeding with direct download\", error);\n            }\n            // If we have Google Drive file info with a download URL, use that\n            if (fileInfo && fileInfo.downloadUrl) {\n                console.log(\"Using Google Drive download URL:\", fileInfo.downloadUrl);\n                window.open(fileInfo.downloadUrl, \"_blank\");\n                return;\n            }\n            // If Google Drive info is not available, try direct download\n            console.log(\"Falling back to direct download\");\n            // Create a temporary hidden anchor element\n            const a = document.createElement(\"a\");\n            a.style.display = \"none\";\n            // Use the hardcoded backend URL to avoid any caching issues\n            const apiBaseUrl = BACKEND_URL.replace(\"/api\", \"\");\n            // Use the public route for published journals, otherwise use the authenticated route\n            if (journal.status === \"published\") {\n                a.href = \"\".concat(apiBaseUrl, \"/api/journals/published/\").concat(journalId, \"/download\");\n                // Try alternative path if API base URL doesn't include /api\n                if (!apiBaseUrl.includes(\"/api\")) {\n                    a.href = \"\".concat(apiBaseUrl, \"/journals/published/\").concat(journalId, \"/download\");\n                }\n            } else {\n                // Fallback to the authenticated route\n                const token = localStorage.getItem(\"token\");\n                a.href = \"\".concat(apiBaseUrl, \"/api/journals/\").concat(journalId, \"/download\");\n                // Try alternative path if API base URL doesn't include /api\n                if (!apiBaseUrl.includes(\"/api\")) {\n                    a.href = \"\".concat(apiBaseUrl, \"/journals/\").concat(journalId, \"/download\");\n                }\n                // Add the token as a query parameter\n                if (token) {\n                    a.href += \"?token=\".concat(token);\n                }\n            }\n            console.log(\"Download URL:\", a.href);\n            // Append to body, click, and remove\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n        } catch (error) {\n            console.error(\"Error downloading journal:\", error);\n        }\n    },\n    deleteJournal: async (journalId)=>{\n        const response = await api.delete(\"/journals/\".concat(journalId));\n        return response.data;\n    },\n    updateJournalStatus: async (journalId, status)=>{\n        const response = await api.put(\"/journals/\".concat(journalId, \"/status\"), {\n            status\n        });\n        return response.data;\n    },\n    publishJournal: async (journalId, publicationNumber)=>{\n        // Use publication_number to match the backend's expected parameter name\n        const response = await api.put(\"/journals/\".concat(journalId, \"/publish\"), {\n            publication_number: publicationNumber\n        });\n        return response.data;\n    },\n    unpublishJournal: async (journalId)=>{\n        const response = await api.put(\"/journals/\".concat(journalId, \"/unpublish\"));\n        return response.data;\n    }\n};\n// Review API\nconst reviewAPI = {\n    getJournalReviews: async (journalId)=>{\n        const response = await api.get(\"/reviews/journal/\".concat(journalId));\n        return response.data;\n    },\n    getAssignedReviews: async ()=>{\n        const response = await api.get(\"/reviews/assigned\");\n        return response.data;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/api.ts\n"));

/***/ }),

/***/ "./src/utils/corsAwareApi.js":
/*!***********************************!*\
  !*** ./src/utils/corsAwareApi.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/**\n * CORS-Aware API Client\n * \n * This utility creates an API client that can handle CORS issues in both\n * development and production environments.\n */ \n// Determine if we're in a browser environment\nconst isBrowser = \"object\" !== \"undefined\";\n// Get the appropriate API URL based on environment variables\nconst getApiBaseUrl = ()=>{\n    // Use environment variable if available\n    if (true) {\n        return \"https://nbu-journal-api.onrender.com/api\";\n    }\n    // Fallback to production URL\n    return \"https://nbu-journal-api.onrender.com/api\";\n};\n// Create the API client\nconst createApiClient = ()=>{\n    const baseURL = getApiBaseUrl();\n    console.log(\"Creating API client with base URL:\", baseURL);\n    // Create axios instance\n    const api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n        baseURL,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n        },\n        withCredentials: true\n    });\n    // Add request interceptor to handle auth tokens\n    api.interceptors.request.use((config)=>{\n        // Only try to get token in browser environment\n        if (isBrowser) {\n            const token = localStorage.getItem(\"token\");\n            if (token) {\n                config.headers.Authorization = \"Bearer \".concat(token);\n            }\n        }\n        // Log request details in development\n        if (true) {\n            var _config_method;\n            console.log(\"[API Request] \".concat((_config_method = config.method) === null || _config_method === void 0 ? void 0 : _config_method.toUpperCase(), \" \").concat(config.url));\n        }\n        return config;\n    }, (error)=>Promise.reject(error));\n    // Add response interceptor for better error handling\n    api.interceptors.response.use((response)=>response, (error)=>{\n        // Handle CORS errors specifically\n        if (error.message === \"Network Error\") {\n            console.error(\"[API] CORS or Network Error:\", error);\n            // Log helpful information for debugging\n            if (true) {\n                console.error(\"\\n            [API] Possible CORS issue detected:\\n            - Frontend Origin: \".concat(window.location.origin, \"\\n            - API Endpoint: \").concat(baseURL, \"\\n            \\n            Make sure your backend CORS configuration includes:\\n            - \").concat(window.location.origin, \"\\n            \\n            If using local development:\\n            1. Make sure your backend is running\\n            2. Check CORS configuration in backend/server.js\\n          \"));\n            }\n        }\n        return Promise.reject(error);\n    });\n    return api;\n};\n// Create and export the API client\nconst api = createApiClient();\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvY29yc0F3YXJlQXBpLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7O0NBS0MsR0FFeUI7QUFFMUIsOENBQThDO0FBQzlDLE1BQU1DLFlBQVksYUFBa0I7QUFFcEMsNkRBQTZEO0FBQzdELE1BQU1DLGdCQUFnQjtJQUNwQix3Q0FBd0M7SUFDeEMsSUFBSUMsSUFBK0IsRUFBRTtRQUNuQyxPQUFPQSwwQ0FBK0I7SUFDeEM7SUFFQSw2QkFBNkI7SUFDN0IsT0FBTztBQUNUO0FBRUEsd0JBQXdCO0FBQ3hCLE1BQU1HLGtCQUFrQjtJQUN0QixNQUFNQyxVQUFVTDtJQUVoQk0sUUFBUUMsR0FBRyxDQUFDLHNDQUFzQ0Y7SUFFbEQsd0JBQXdCO0lBQ3hCLE1BQU1HLE1BQU1WLG9EQUFZLENBQUM7UUFDdkJPO1FBQ0FLLFNBQVM7WUFDUCxnQkFBZ0I7WUFDaEIsVUFBVTtRQUNaO1FBQ0FDLGlCQUFpQjtJQUNuQjtJQUVBLGdEQUFnRDtJQUNoREgsSUFBSUksWUFBWSxDQUFDQyxPQUFPLENBQUNDLEdBQUcsQ0FDMUIsQ0FBQ0M7UUFDQywrQ0FBK0M7UUFDL0MsSUFBSWhCLFdBQVc7WUFDYixNQUFNaUIsUUFBUUMsYUFBYUMsT0FBTyxDQUFDO1lBQ25DLElBQUlGLE9BQU87Z0JBQ1RELE9BQU9MLE9BQU8sQ0FBQ1MsYUFBYSxHQUFHLFVBQWdCLE9BQU5IO1lBQzNDO1FBQ0Y7UUFFQSxxQ0FBcUM7UUFDckMsSUFBSWYsSUFBeUIsRUFBZTtnQkFDYmM7WUFBN0JULFFBQVFDLEdBQUcsQ0FBQyxpQkFBaURRLFFBQWhDQSxpQkFBQUEsT0FBT0ssTUFBTSxjQUFiTCxxQ0FBQUEsZUFBZU0sV0FBVyxJQUFHLEtBQWMsT0FBWE4sT0FBT08sR0FBRztRQUN6RTtRQUVBLE9BQU9QO0lBQ1QsR0FDQSxDQUFDUSxRQUFVQyxRQUFRQyxNQUFNLENBQUNGO0lBRzVCLHFEQUFxRDtJQUNyRGYsSUFBSUksWUFBWSxDQUFDYyxRQUFRLENBQUNaLEdBQUcsQ0FDM0IsQ0FBQ1ksV0FBYUEsVUFDZCxDQUFDSDtRQUNDLGtDQUFrQztRQUNsQyxJQUFJQSxNQUFNSSxPQUFPLEtBQUssaUJBQWlCO1lBQ3JDckIsUUFBUWlCLEtBQUssQ0FBQyxnQ0FBZ0NBO1lBRTlDLHdDQUF3QztZQUN4QyxJQUFJdEIsSUFBeUIsRUFBZTtnQkFDMUNLLFFBQVFpQixLQUFLLENBQUMscUZBR01sQixPQURHdUIsT0FBT0MsUUFBUSxDQUFDQyxNQUFNLEVBQUMsa0NBSXhDRixPQUhjdkIsU0FBUSxtR0FHQyxPQUF2QnVCLE9BQU9DLFFBQVEsQ0FBQ0MsTUFBTSxFQUFDO1lBTS9CO1FBQ0Y7UUFFQSxPQUFPTixRQUFRQyxNQUFNLENBQUNGO0lBQ3hCO0lBR0YsT0FBT2Y7QUFDVDtBQUVBLG1DQUFtQztBQUNuQyxNQUFNQSxNQUFNSjtBQUVaLCtEQUFlSSxHQUFHQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9jb3JzQXdhcmVBcGkuanM/NDRmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENPUlMtQXdhcmUgQVBJIENsaWVudFxuICogXG4gKiBUaGlzIHV0aWxpdHkgY3JlYXRlcyBhbiBBUEkgY2xpZW50IHRoYXQgY2FuIGhhbmRsZSBDT1JTIGlzc3VlcyBpbiBib3RoXG4gKiBkZXZlbG9wbWVudCBhbmQgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMuXG4gKi9cblxuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuLy8gRGV0ZXJtaW5lIGlmIHdlJ3JlIGluIGEgYnJvd3NlciBlbnZpcm9ubWVudFxuY29uc3QgaXNCcm93c2VyID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG5cbi8vIEdldCB0aGUgYXBwcm9wcmlhdGUgQVBJIFVSTCBiYXNlZCBvbiBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbmNvbnN0IGdldEFwaUJhc2VVcmwgPSAoKSA9PiB7XG4gIC8vIFVzZSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpZiBhdmFpbGFibGVcbiAgaWYgKHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwpIHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTDtcbiAgfVxuICBcbiAgLy8gRmFsbGJhY2sgdG8gcHJvZHVjdGlvbiBVUkxcbiAgcmV0dXJuICdodHRwczovL25idS1qb3VybmFsLWFwaS5vbnJlbmRlci5jb20vYXBpJztcbn07XG5cbi8vIENyZWF0ZSB0aGUgQVBJIGNsaWVudFxuY29uc3QgY3JlYXRlQXBpQ2xpZW50ID0gKCkgPT4ge1xuICBjb25zdCBiYXNlVVJMID0gZ2V0QXBpQmFzZVVybCgpO1xuICBcbiAgY29uc29sZS5sb2coJ0NyZWF0aW5nIEFQSSBjbGllbnQgd2l0aCBiYXNlIFVSTDonLCBiYXNlVVJMKTtcbiAgXG4gIC8vIENyZWF0ZSBheGlvcyBpbnN0YW5jZVxuICBjb25zdCBhcGkgPSBheGlvcy5jcmVhdGUoe1xuICAgIGJhc2VVUkwsXG4gICAgaGVhZGVyczoge1xuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgfSxcbiAgICB3aXRoQ3JlZGVudGlhbHM6IHRydWUsXG4gIH0pO1xuICBcbiAgLy8gQWRkIHJlcXVlc3QgaW50ZXJjZXB0b3IgdG8gaGFuZGxlIGF1dGggdG9rZW5zXG4gIGFwaS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoXG4gICAgKGNvbmZpZykgPT4ge1xuICAgICAgLy8gT25seSB0cnkgdG8gZ2V0IHRva2VuIGluIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAgICAgIGlmIChpc0Jyb3dzZXIpIHtcbiAgICAgICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTtcbiAgICAgICAgaWYgKHRva2VuKSB7XG4gICAgICAgICAgY29uZmlnLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IGBCZWFyZXIgJHt0b2tlbn1gO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIExvZyByZXF1ZXN0IGRldGFpbHMgaW4gZGV2ZWxvcG1lbnRcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgICBjb25zb2xlLmxvZyhgW0FQSSBSZXF1ZXN0XSAke2NvbmZpZy5tZXRob2Q/LnRvVXBwZXJDYXNlKCl9ICR7Y29uZmlnLnVybH1gKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICB9LFxuICAgIChlcnJvcikgPT4gUHJvbWlzZS5yZWplY3QoZXJyb3IpXG4gICk7XG4gIFxuICAvLyBBZGQgcmVzcG9uc2UgaW50ZXJjZXB0b3IgZm9yIGJldHRlciBlcnJvciBoYW5kbGluZ1xuICBhcGkuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShcbiAgICAocmVzcG9uc2UpID0+IHJlc3BvbnNlLFxuICAgIChlcnJvcikgPT4ge1xuICAgICAgLy8gSGFuZGxlIENPUlMgZXJyb3JzIHNwZWNpZmljYWxseVxuICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgPT09ICdOZXR3b3JrIEVycm9yJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdbQVBJXSBDT1JTIG9yIE5ldHdvcmsgRXJyb3I6JywgZXJyb3IpO1xuICAgICAgICBcbiAgICAgICAgLy8gTG9nIGhlbHBmdWwgaW5mb3JtYXRpb24gZm9yIGRlYnVnZ2luZ1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGBcbiAgICAgICAgICAgIFtBUEldIFBvc3NpYmxlIENPUlMgaXNzdWUgZGV0ZWN0ZWQ6XG4gICAgICAgICAgICAtIEZyb250ZW5kIE9yaWdpbjogJHt3aW5kb3cubG9jYXRpb24ub3JpZ2lufVxuICAgICAgICAgICAgLSBBUEkgRW5kcG9pbnQ6ICR7YmFzZVVSTH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgTWFrZSBzdXJlIHlvdXIgYmFja2VuZCBDT1JTIGNvbmZpZ3VyYXRpb24gaW5jbHVkZXM6XG4gICAgICAgICAgICAtICR7d2luZG93LmxvY2F0aW9uLm9yaWdpbn1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgSWYgdXNpbmcgbG9jYWwgZGV2ZWxvcG1lbnQ6XG4gICAgICAgICAgICAxLiBNYWtlIHN1cmUgeW91ciBiYWNrZW5kIGlzIHJ1bm5pbmdcbiAgICAgICAgICAgIDIuIENoZWNrIENPUlMgY29uZmlndXJhdGlvbiBpbiBiYWNrZW5kL3NlcnZlci5qc1xuICAgICAgICAgIGApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfVxuICApO1xuICBcbiAgcmV0dXJuIGFwaTtcbn07XG5cbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSBBUEkgY2xpZW50XG5jb25zdCBhcGkgPSBjcmVhdGVBcGlDbGllbnQoKTtcblxuZXhwb3J0IGRlZmF1bHQgYXBpO1xuIl0sIm5hbWVzIjpbImF4aW9zIiwiaXNCcm93c2VyIiwiZ2V0QXBpQmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BUElfVVJMIiwiY3JlYXRlQXBpQ2xpZW50IiwiYmFzZVVSTCIsImNvbnNvbGUiLCJsb2ciLCJhcGkiLCJjcmVhdGUiLCJoZWFkZXJzIiwid2l0aENyZWRlbnRpYWxzIiwiaW50ZXJjZXB0b3JzIiwicmVxdWVzdCIsInVzZSIsImNvbmZpZyIsInRva2VuIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIkF1dGhvcml6YXRpb24iLCJtZXRob2QiLCJ0b1VwcGVyQ2FzZSIsInVybCIsImVycm9yIiwiUHJvbWlzZSIsInJlamVjdCIsInJlc3BvbnNlIiwibWVzc2FnZSIsIndpbmRvdyIsImxvY2F0aW9uIiwib3JpZ2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/corsAwareApi.js\n"));

/***/ })

});